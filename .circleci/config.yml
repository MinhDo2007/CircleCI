version: 2

defaults: &defaults
  docker:
    - image: circleci/ruby:2.6.1
      environment:
        RAILS_ENV: test
    - image: circleci/postgres:9.6.2-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: circle_test

aliases:
  - &restore_api_bundle_cache
    keys:
      - circle_ruby_bundle_{{ checksum "Gemfile.lock" }}
      - circle_ruby_bundle_
  - &save_api_bundle_cache
    key: circle_ruby_bundle_{{ checksum "Gemfile.lock" }}
    paths:
      - vendor/bundle

references:
  commands:
    setup_rails: &setup_rails
      name: setup rails
      command: |
        sudo apt-get install nodejs
        gem install bundle
        RAILS_ENV=test bundle install --path vendor/bundle
        RAILS_ENV=test bundle exec rails db:drop db:create db:migrate
    setup_postgresql: &setup_postgresql
      name: setup_postgresql
      command: sudo apt install -y postgresql-client || true
    exec_test: &exec_test
      name: exec_test
      command: bundle exec rspec
    exec_comment_rubocop: &exec_comment_rubocop
      name: exec_comment_rubocop
      command: |
        chmod +x bin/run-rubocop.sh
        bin/run-rubocop.sh
    exec_rubocop: &exec_rubocop
      name: exec_rubocop
      command: bundle exec rubocop
jobs:
  build: &build_defaults
    <<: *defaults
    parallelism: 4
    working_directory: ~/CIRCLECI
    steps:
      - checkout
      - restore_cache: *restore_api_bundle_cache
      - run: *setup_rails
      - run: *setup_postgresql
      - save_cache: *save_api_bundle_cache
      - run: *exec_comment_rubocop
      # - run: *exec_test
      - run: *exec_rubocop
      - store_test_results:
          path: /tmp/test-results
